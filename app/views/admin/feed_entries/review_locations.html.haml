.pagination
  = paginate @feed_entries
%table.feed_entries.table-striped.table
  %thead
    %tr
      %th Id
      - if params[:news_feed_id].nil?
        %th Feed
      %th Name
      %th Locations
      %th Tags
      %th
      %th(width = "65px")

  %tbody
    - @feed_entries.each do|entry|
      %tr
        %td= entry.id
        - if params[:news_feed_id].nil?
          %td= entry.feed.name
        %td= entry.name
        %td
          - unless entry.primary_location.nil?
            %span.label.label-success{:id=>"feed_entry_#{entry.id}"}
              = link_to entry.primary_location.name, admin_feed_entry_set_primary_location_path(entry, :location_id => entry.primary_location.id), :rel => :nofollow, :id => "location_#{entry.primary_location.id}", :class => 'location'

          - for location in entry.secondary_locations
            %span.label.label-info{:id=>"feed_entry_#{entry.id}"}
              = link_to location.name, admin_feed_entry_set_primary_location_path(entry, :location_id => location.id), :rel => :nofollow, :id => "location_#{location.id}", :class => 'location'
        %td
          - unless entry.get_tags.nil?
            - entry.get_tags.tags.each do |tag|
              %span.label.label-inverse= tag
        %td
          %span{:class => "entry #{(entry.failed? ? 'failed' : 'normal')}" }
            = entry.state
          
        %td
          = link_to "Enqueue", "#", :class => "btn btn-inverse"

= javascript_include_tag 'feed_entries/review_locations.onReady'
